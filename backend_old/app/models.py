from sqlalchemy import Boolean, Column, Integer, String, Date, ForeignKey
from sqlalchemy.orm import relationship
from .database import Base

class Application(Base):
    __tablename__ = "applications"
    id = Column(Integer, primary_key=True, index=True)
    nom = Column(String, index=True)
    categorie = Column(String)
    refdate = Column(Date)
    sys_dernier_control = Column(Date)
    sys_derniere_synchro = Column(Date)
    sys_score_confiance = Column(Integer)
    phase_deploiement = Column(String)
    type_dev = Column(String)
    type_service = Column(String)
    code_service_technique = Column(String)
    ref_identite = Column(String)
    vocation = Column(String)
    fournisseur = Column(String)
    url = Column(String)
    nb_utilisateurs = Column(Integer)
    auditable_pharma = Column(Boolean)
    donnees_sante = Column(Boolean)
    conform_archi_appli = Column(Boolean)
    date_remise_confo = Column(Date)
    donnees_personnelles = Column(Boolean)
    url_fiche_rgpd = Column(String)
    inscri_pra = Column(Boolean)
    inscri_pca = Column(Boolean)
    support_utilisateur = Column(Boolean)
    visible_portail_acces = Column(Boolean)
    plan_secu = Column(String)
    plan_deco = Column(String)
    obsolesence = Column(String)
    plage_service = Column(String)
    rto = Column(Integer)
    rpo = Column(Integer)
    alias = Column(String)
    progiciel = Column(String)
    freq_revue = Column(String)
    criticite_si = Column(String)
    date_mep = Column(Date)
    date_eos = Column(Date)
    date_last_revue = Column(Date)
    ecart_last_revue = Column(Integer)
    autre_regl = Column(String)
    description = Column(String)
    description_synthetique = Column(String)
    code_pf = Column(String)
    trigramme = Column(String)
    etat = Column(String)
    reference_bia = Column(Boolean)
    classe_exploitation = Column(String)
    confidentialite = Column(String)
    sla_disponibilite = Column(String)
    obsolescence_systeme = Column(String)
    sla_integrite = Column(String)
    sla_tracabilite = Column(String)
    niveau_risque_gxp = Column(String)

class User(Base):
    __tablename__ = "users"
    id = Column(Integer, primary_key=True, index=True)
    fullname = Column(String)
    right = Column(Integer)
    role = Column(String)
    localisation = Column(String)
    mail = Column(String)
    tel = Column(String)

class Change(Base):
    __tablename__ = "changes"
    id = Column(Integer, primary_key=True, index=True)
    appName = Column(Integer, ForeignKey('applications.id'))
    changeType = Column(Integer)
    key = Column(String)
    newValue = Column(String)
    oldValue = Column(String)
    dateOfChange = Column(Date)
    changeBy = Column(Integer, ForeignKey('users.id'))

    application = relationship("Application", back_populates="changes")
    user = relationship("User", back_populates="changes")

Application.changes = relationship("Change", order_by=Change.id, back_populates="application")
User.changes = relationship("Change", order_by=Change.id, back_populates="user")
